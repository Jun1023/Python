Q. 
  
  다이나믹 프로그래밍을 이용해 해결하면 되는 문제였다.
  
  규칙 4개가 있다
  1) X가 5로 나눠떨어지면 5로 나눔
  2) X가 3으로 나눠떨어지면 3으로 나눔
  3) X가 2로 나눠떨어지면 2로 나눔
  4) X에서 1을 뺌

  [Input Condition]
  1. 첫째 줄에 정수 X가 주어진다. (1 <= X <= 30,000)

  [Output Condition]
  1. 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
    
  [Input]
  26

  [Output]
  3
   
  [Code]

  from sys import stdin
  
  x = int(stdin.readline())

  d = [0] * 30001

  for i in range(2, x + 1):
      d[i] = d[i - 1] + 1 # 현재의 수에서 1을 빼는 경우
      if i % 2 == 0: # 현재 수가 2로 나눠 떨어지는 경우
          d[i] = min(d[i], d[i // 2] + 1)
      if i % 3 == 0: # 현재 수가 3로 나눠 떨어지는 경우
          d[i] = min(d[i], d[i // 3] + 1)
      if i % 5 == 0: # 현재 수가 5로 나눠 떨어지는 경우
          d[i] = min(d[i], d[i // 5] + 1)

  print(d[x])
