Q. 
  
  플로이드 워셜 알고리즘을 사용하면 간단하게 해결되는 문제이다.

  [Input Condition]
  1. 첫째 줄에 전체 회사의 개수 N과 경로의 개수 M이 공백으로 구분되어 차례대로 주어진다. ( 1 <= N, M <= 100 ) 
  2. 둘째 줄부터 M + 1번재 줄에는 연결된 두 회사의 번호가 공백으로 구분되어 주어진다.
  3. M + 2번째 줄에는 X와 K가 공백으로 구분되어 차례대로 주어진다. ( 1 <= K <= 100 )

  [Output Condition]
  1. 첫째 줄에 방문 판매원 A가 K번 회사를 거쳐 X번 회사로 가는 최소 이동 시간을 출력한다.
  만약 X번 회사에 도달할 수 없다면 -1을 출력한다.
    
  [Input]
  5 7

  [Output]
  1 2
  1 3
  1 4
  2 4
  3 4
  3 5
  4 5
  4 5
   
  [Code]

  import sys
  input = sys.stdin.readline
  INF = int(1e9)

  N, M = map(int, input().split())

  graph = [[INF] * (N + 1) for _ in range(N + 1)]

  for a in range(1, N + 1):
      for b in range(1, N + 1):
          if a == b:
              graph[a][b] = 0

  for _ in range(1, M + 1): # 간선 입력 받기
      a, b = map(int, input().split())
      graph[a][b] = 1
      graph[b][a] = 1

  X, K = map(int, input().split())

  for k in range(1, N + 1):
      for a in range(1, N + 1):
          for b in range(1, N + 1):
              graph[a][b] = min(graph[a][b], graph[a][k] + graph[k][b])

  result = graph[1][K] + graph[K][X]

  if result >= INF:
      print(-1)
  else:
      print(result)
