Q. 
  
  위상 정렬 알고리즘 응용 문제이다.

  [Input Condition]
  1. 첫째 줄에 동빈이가 듣고자 하는 강의의 수 N(1 <= N <= 500)이 주엍어진다.
  2. 다음 N개의 줄에는 각 각의의 강의 시간과 그 강의를 듣기 위해 먼저 들어야 하는 강의들의 번호가 자연수로 주어지며, 각 자연수는 공백으로 구분한다. 이때 강의 시간은 100,000 이하의 자연수이다.
  3. 각 강의 번호는 1부터 N까지로 구성되며, 각 줄은 -1로 끝난다.
  
  [Output Condition]
  1. N개의 강의에 대하여 수강하기까지 걸리는 최소 시간을 한 줄에 하나씩 출력한다.
    
  [Input]
  5
  10 -1
  10 1 -1
  4 1 -1
  4 3 1 -1
  3 3 -1

  [Output]
  10
  20
  14
  18
  17
   
  [Code]

  from collections import deque
  import copy
  import sys
  input = sys.stdin.readline

  v = int(input())
  indegree = [0] * (v + 1)
  graph = [[] for i in range(v + 1)]
  time = [0] * (v + 1)

  for i in range(1, v + 1):
      data = list(map(int, input().split()))
      time[i] = data[0]
      for x in data[1:-1]:
          indegree[i] += 1
          graph[x].append(i)

  def topology_sort():
      result = copy.deepcopy(time)
      q = deque()

      for i in range(1, v + 1):
          if indegree[i] == 0:
              q.append(i)

      while q:
          now = q.popleft()
          for i in graph[now]:
              result[i] = max(result[i], result[now] + time[i])
              indegree[i] -= 1
              if indegree[i] == 0:
                  q.append(i)

      for i in range(1, v + 1):
          print(result[i])

  topology_sort()
