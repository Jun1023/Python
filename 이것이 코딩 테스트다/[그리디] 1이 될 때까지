Q. 
  
   조건을 주고 두 과정 중 하나를 반복적으로 수행하여 가장 최선의 선택을 하는 문제이다.
  
   입력 조건
    1. 첫째 줄에 N(2 <= N <= 100,000)과 K(2 <= K <= 100,000)가 공백으로 구분되며 각각 자연수로 주어진다. 이때 입력으로 주어지는 N은 항상 K보다 크거나 같다.
   
   출력 조건
    1. 첫째 줄에 N이 1이 될 때까지 1번 OR 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력한다.
    
   입력)
   
   25 5
   
   출력)
   
   2
   
[풀이]
 
 1번 선택은 N-1을 해주는 것이고 2번 선택은 N / K이다.
 2번의 조건이 K를 N으로 나누었을 때 딱맞게 떨어져야한다.
 2번의 조건을 처음으로 두고 조건이 충족된다면 N /= K를 통해 N값을 수정해주고, 2번의 조건을 충조갛지 못한다면 N -= 1을 해준다.
 N == 1이 된다면 반복문을 종료하고 정답을 출력해주면 된다.

 
[My Code]

N, K = map(int, input().split())

cnt = 0 # 반복문이 돌아간 횟수

while N != 1: # N == 1이 되면 종료되는 조건
    if N % K == 0: # 2번 조건을 충족한다면
        N /= K
        cnt += 1
    else: # 조건을 충족하지 못한다면
        N -= 1
        cnt += 1

print(cnt)

[Book Code]

n, k = map(int, input().split())
result = 0
i = 1

while True:
    target = (n // k) * k # n이 k의 배수가 되도록 하기 위한 과정
    result += (n - target)
    n = target

    if n < k:
        break

    result += 1
    n //= k

    print(i, result)
    i += 1

result += (n - 1)
print(result)
