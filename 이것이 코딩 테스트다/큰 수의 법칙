Q. 
  
   다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰 수를 만드는 법칙이다. 
   배열의 크기 N, 숫자가 더해지는 횟수 M, 반복될 수 있는 횟수 K
  
   입력 조건
    1. 첫째 줄에 N(2 <= N <= 1,000), M(1 <= M <= 10,000), K(1 <= K <= 10,000)의 자연수가 주어지며, 각 자연수는 공백으로 구분한다.
    2. 둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1 이상 10,000 이하의 수로 주어진다.
    3. 입력으로 주어지는 K는 항상 M보다 작거나 같다.
   
   출력 조건
    1. 첫째 줄에 동빈이의 큰 수의 법칙에 따라 더해진 답을 출력한다.
    
   입력)
   
   5 8 3
   2 4 5 4 6
   
   출력)
   
   46
   
[풀이]
 
결론적으로는 합했을 때 가장 큰 수를 출력하는게 목적이다.
그렇기 위해서는 가장 큰 수를 연속할 수 있을만큼 더해주고, 두 번째 큰 수를 한 번 더해주고 다시 가장 큰 수를 더해주는 식으로 설계를 해야한다.
가장 큰 수와 두번째 큰 수를 구하기 위해서 정렬을 해준다.

 
[Code]

N, M, K = map(int, input().split())

# N : 배열 크기
# M : 덧셈 길이
# K : 연속 숫자 조건

count = 0 # 덧셈 횟수를 체크해주기 위한 변수
k_count = 0 # k 조건을 만족하는지 확인하기 위한 변수
result = 0 # 더한 값을 넣기 위한 변수

num = list(input().split()) # 숫자가 들어간 배열
num = sorted(num, reverse=True) # 배열 정렬

while count < M: # 
    if k_count < K: # 제일 큰 수가 K번 반복되지 않았다면
        result += int(num[0])
        k_count += 1
        count += 1

    else: # 제일 큰 수가 K번 반복되었다면
        result += int(num[1])
        k_count = 0
        count += 1

print(result)

